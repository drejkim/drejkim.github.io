AndroidWearMotionSensors:
  category: android
  url: /projects/AndroidWearMotionSensors/
  img: /assets/img/projects/AndroidWearMotionSensors.jpg
  description: Using the accelerometer and gyroscope on an Android Wear device
  excerpt: This project displays the raw accelerometer and gyroscope data on an Android Wear device. It also performs simple motion detection&mdash;when a shake or rotation is detected, the background color turns green.
  youtube: https://www.youtube.com/embed/Yxne6YWGbE0
  links:
    -
      name: View on GitHub
      url: https://github.com/drejkim/AndroidWearMotionSensors
    -
      name: View blog post
      url: /blog/2015/02/04/motion-sensors-on-android-wear

edi-cam:
  category: intel
  url: /projects/edi-cam/
  img: /assets/img/projects/edi-cam.jpg
  description: Video streaming on Intel Edison
  excerpt: This project shows how to stream video to a web browser from a webcam connected to Intel Edison, all while powered by a 9V battery. A Node.js server on Edison listens for the incoming video stream and broadcasts it to all connected browsers via WebSockets. On the client-side, the video is then decoded using jsmpeg and rendered onto an HTML canvas element.
  youtube: http://www.youtube.com/embed/nVDL2-bFT3Y
  links:
    -
      name: View on GitHub
      url: https://github.com/drejkim/edi-cam
    -
      name: View blog post
      url: /blog/2014/12/08/video-streaming-on-edison

edison-arduino101-iot:
  category: intel
  url: /projects/edison-arduino101-iot/
  img: /assets/img/projects/edison-arduino101-iot.jpg
  description: Edison + Arduino 101 IoT demo
  excerpt: This demo illustrates a simple IoT example by displaying an Arduino 101's IMU (accelerometer / gyroscope) data on a web page. In order to do this, an Intel Edison module is used to receive the data from the Arduino 101 via BLE (Bluetooth Low Energy), then sends it to a web server via WebSockets.
  youtube: https://www.youtube.com/embed/NRZZRsqJQWY
  links:
    -
      name: View on GitHub
      url: https://github.com/drejkim/edison-arduino101-iot
    -
      name: View blog post
      url: /blog/2016/04/08/using-edison-and-arduino-101-together
  showcase: true

face-detection-node-opencv:
  category: web
  url: /projects/face-detection-node-opencv/
  img: /assets/img/projects/face-detection-node-opencv.jpg
  description: Real-time face detection using OpenCV, Node.js, and WebSockets
  excerpt: This project performs real-time face detection by using the Node.js bindings for OpenCV. The processed frames are then streamed to a web browser using WebSockets.
  youtube: https://www.youtube.com/embed/v2SY0naPBFw
  links:
    -
      name: View on GitHub
      url: https://github.com/drejkim/face-detection-node-opencv
    -
      name: View blog post
      url: /blog/2014/12/02/real-time-face-detection-using-opencv-nodejs-and-websockets

frogger:
  category: web
  url: /projects/frogger/
  img: /assets/img/projects/frogger.jpg
  description: My final project for Udacity's Object-Oriented JavaScript class
  excerpt: The purpose of this class is to learn the best practices of object-oriented JavaScript by building an implementation of the classic arcade game, Frogger.
  youtube: https://www.youtube.com/embed/dIu40myH9CY
  links:
    -
      name: View site
      url: http://drejkim.com/frogger/
    -
      name: View on GitHub
      url: https://github.com/drejkim/frogger

led-speech-edison:
  category: intel
  url: /projects/led-speech-edison/
  img: /assets/img/projects/led-speech-edison.jpg
  description: Speech-activated LEDs using Intel Edison, SparkFun blocks, Python, and CMU Sphinx
  excerpt: This project combines basic circuit design and Python programming to control 4 LEDs by speech. It also uses CMU Sphinx, a speech recognition engine from Carnegie Mellon University.
  youtube: https://www.youtube.com/embed/kVTV_qZtwlY
  links:
    -
      name: View on GitHub
      url: https://github.com/drejkim/led-speech-edison
    -
      name: View blog post
      url: /blog/2015/04/15/speech-activated-leds-using-intel-edison

LediMote:
  category: intel
  url: /projects/LediMote/
  img: /assets/img/projects/LediMote.jpg
  description: Remote-controlled LEDs using Intel Edison and Node.js (for web, iOS, and Android)
  excerpt: This project illustrates how to turn on and off LEDs from a web page, an iOS app, or an Android app using Intel Edison.
  youtube: https://www.youtube.com/embed/i61g4aYkrI0
  links:
    -
      name: View on GitHub
      url: https://github.com/drejkim/LediMote
    -
      name: View blog post
      url: /blog/2015/06/25/ledimote-remote-controlled-leds-using-intel-edison-and-nodejs

multi-screen-demo:
  category: web
  url: /projects/multi-screen-demo/
  img: /assets/img/projects/multi-screen-demo.jpg
  description: Controlling your PC web browser from your mobile phone
  excerpt: multi-screen-demo is a Node.js / AngularJS app that uses socket.io (WebSockets) to pair a mobile and a PC. The app contains two demos. The first uses gestures on a mobile and shows the detected events on a paired PC. The sceond uses a simple D-pad controller on a mobile to move a target around on a paired PC.
  youtube: https://www.youtube.com/embed/7O-rgDwTI9I
  links:
    -
      name: View site
      url: http://multi-screen-demo.herokuapp.com/
    -
      name: View on GitHub
      url: https://github.com/drejkim/multi-screen-demo
    -
      name: View blog post
      url: /blog/2014/02/24/using-websockets-for-developing-multi-screen-user-experiences

O Holy Night:
  category: particle
  url: /projects/o-holy-night/
  img: /assets/img/projects/o-holy-night.jpg
  description: Recreating the Nativity Scene using the Particle Photon and NeoPixels
  excerpt: This project uses familiar ingredients, namely the Particle Photon and NeoPixels, and some paper cutouts to recreate the Nativity Scene. The lights are controlled with a custom iOS app.
  youtube: https://www.youtube.com/embed/TUcphhJK0uM
  links:
    -
      name: View on GitHub
      url: https://github.com/drejkim/o-holy-night
    -
      name: View blog post
      url: /blog/2016/12/23/o-holy-night/
  showcase: true

particle-light-alexa:
  category: particle
  url: /projects/particle-light-alexa/
  img: /assets/img/projects/particle-light-alexa.jpg
  description: Asking Amazon Alexa to control a light ft. NeoPixels and Particle Photon
  excerpt: Ask Amazon Alexa to control a light. In this case, the "light" is a NeoPixel ring connected to a Particle Photon. The functions to control the light are exposed through the <a href="https://docs.particle.io/reference/firmware/photon/#particle-function-">Particle Cloud</a>. The Alexa skill then calls the functions using the <a href="https://docs.particle.io/reference/javascript/#callfunction">JavaScript Particle API</a>. This project has also been featured on <a href="https://blog.hackster.io/hacksters-handpicked-projects-of-the-week-c8045ee5cfe5">Hackster's Handpicked Projects of the Week</a>.
  youtube: https://www.youtube.com/embed/y9VvusYF1sg
  links:
    -
      name: View on GitHub
      url: https://github.com/drejkim/particle-light-alexa
    -
      name: View blog post
      url: /blog/2016/09/10/alexa-turn-on-the-light/
  showcase: true

particle-weather-station:
  category: particle
  url: /projects/particle-weather-station/
  img: /assets/img/projects/particle-weather-station.jpg
  description: Monitoring temperature and humidity using the Particle Photon
  excerpt: Create your own weather station with the Particle Photon board. A DHT11 sensor is used to measure temperature and humidity. Ubidots, a cloud service, is then used to visualize the data in real time.
  youtube: https://www.youtube.com/embed/XKxeXtfn4MM
  links:
    -
      name: View on GitHub
      url: https://github.com/drejkim/particle-weather-station
    -
      name: View blog post
      url: /blog/2016/05/25/monitoring-temperature-and-humidity-using-the-particle-photon

particle-weather-station-alexa:
  category: particle
  url: /projects/particle-weather-station-alexa/
  img: /assets/img/projects/particle-weather-station-alexa.jpg
  description: Asking Amazon Alexa for the temperature and humidity from a Particle Photon
  excerpt: This project integrates Amazon Alexa to the original <a href="/projects/particle-weather-station/">particle-weather-station</a> project. Instead of visualizing the data on a dashboard, you can ask Alexa for the current temperature or humidity. To communicate the data between Particle and Alexa, the variables are exposed through the <a href="https://docs.particle.io/reference/firmware/photon/#particle-variable-">Particle Cloud</a>, then the Alexa skill gets the data using the <a href="https://docs.particle.io/reference/javascript/">JavaScript Particle API</a>.
  youtube: https://www.youtube.com/embed/j5CpMcM5yRI
  links:
    -
      name: View on GitHub
      url: https://github.com/drejkim/particle-weather-station-alexa
    -
      name: View blog post
      url: /blog/2016/08/30/asking-alexa-for-the-temperature-and-humidity-from-a-particle-photon

Reading Quantified:
  category: web
  url: /projects/reading-quantified/
  img: /assets/img/projects/reading-quantified.jpg
  description: A dashboard for analyzing my reading habits
  excerpt: This project analyzes and visualizes my reading habits. The book information is stored on Trello, and Python is used to parse, analyze, and store the data in a database. The web app uses AngularJS and d3.js to visualize the data on a dashboard. The backend is powered by Parse Server and is hosted on Heroku.
  youtube: https://www.youtube.com/embed/vjZubKzlCnI
  links:
    -
      name: View site
      url: http://drejkim.com/reading-quantified/
    -
      name: View on GitHub
      url: https://github.com/drejkim/reading-quantified
    -
      name: View blog post
      url: /blog/2015/11/24/introducing-reading-quantified

rte-angular:
  category: web
  url: /projects/rte-angular/
  img: /assets/img/projects/rte-angular.jpg
  description: An AngularJS rich-text editor
  excerpt: This is a custom AngularJS directive for adding a rich-text editor to your web page. It includes all the basic text formatting options, as well as the ability to include image and video links.
  youtube: https://www.youtube.com/embed/G9czu0WwKVA
  links:
    -
      name: View site
      url: http://drejkim.com/rte-angular/
    -
      name: View on GitHub
      url: https://github.com/drejkim/rte-angular
